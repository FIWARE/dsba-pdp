openapi: 3.0.3
info:
  title: Trusted Issuers List
  description: Maintain a list of trusted issuers of verifiable credentials
  version: 4.0.0
tags:
  - name: verfication
  - name: issuer
paths:
  /verify:
    post:
      tags:
        - verification
      operationId: verifyIssuer
      summary: Verifies that the credential is created by a trusted issuer and the issuer is allowed to issue such credential
      description: verifiy the vc
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifiableCredential'
      responses:
        '204':
          description: Successfully verified the request.
        '400':
          $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Issuer verfication was not successfull
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Decision'
  /issuer:
    post:
      tags:
        - issuer
      operationId: createTrustedIssuer
      summary: Create a trusted issuer and its capabilities
      description: create trusted issuer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrustedIssuer'
      responses:
        '201':
          description: Successfully created the issuer.
        '400':
          $ref: '#/components/schemas/ProblemDetails'
        '409':
          $ref: '#/components/schemas/ProblemDetails'
    get:
      tags:
        - issuer
      operationId: getIssuers
      description: Return the list of trusted issuers
      summary: return the issuers
      parameters:
        - name: limit
          in: query
          schema:
            type: number
            default: 100
          required: false
        - name: offset
          in: query
          schema:
            type: number
            default: 0
      responses:
        '200':
          description: Successfully returned the issuer list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedIssuerList'
  /issuer/{id}:
    get:
      tags:
        - issuer
      parameters:
        - $ref: '#/components/parameters/Id'
      description: Return a single issuer
      operationId: getIssuerById
      summary: get an issuer
      responses:
        '200':
          description: Successfully returend the issuer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedIssuer'
        '404':
          $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - issuer
      parameters:
        - $ref: '#/components/parameters/Id'
      operationId: deleteIssuerById
      description: Delete a single issuer
      responses:
        '204':
          description: Successfully deleted
        '404':
          $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - issuer
      parameters:
        - $ref: '#/components/parameters/Id'
      description: Update a single issuer
      operationId: replaceIssuer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrustedIssuer'
      responses:
        '204':
          description: Successfully updated the issuer.
        '400':
          $ref: '#/components/schemas/ProblemDetails'
        '409':
          $ref: '#/components/schemas/ProblemDetails'
components:
  parameters:
    Id:
      name: id
      in: path
      required: true
      schema:
        type: string
        example: did:elsi:happypets
  schemas:
    Decision:
      type: object
      properties:
        decision:
          type: boolean
          example: false
        reason:
          type: string
          example: "Issuer is not allowed to assign the roles."
    CredentialsType:
      type: array
      items:
        type: string
      example:
        - CustomerCredential
        - VerifiableCredential
    IssuerId:
      type: object
      properties:
        id:
          type: string
          example: did:elsi:happypets
    AuthorizationRegistry:
      type: object
      properties:
        id:
          type: string
          example: EU.EORI.HAPPYPETS
        host:
          type: string
          example: http://keyrock:8080
        tokenPath:
          type: string
          example: /oauth2/token
        delegationPath:
          type: string
          example: /ar/delegation
      required:
        - id
        - host
    CustomerCredentialSubject:
      type: object
      properties:
        id:
          type: string
          example: did:peer:99ab5bca41bb45b78d242a46f0157b7d
        roles:
          type: array
          items:
            type: string
          example:
            - GOLD_CUSTOMER
    IShareCustomerCredentialSubject:
      type: object
      properties:
        id:
          type: string
          example: did:peer:99ab5bca41bb45b78d242a46f0157b7d
        roles:
          type: array
          items:
            type: string
          example:
            - GOLD_CUSTOMER
        authorizationRegistry:
          $ref: '#/components/schemas/AuthorizationRegistry'
    VerifiableCredential:
      type: object
      properties:
        '@context':
          type: array
          items:
            type: string
            format: uri
          example:
            - https://www.w3.org/2018/credentials/v1
            - https://happypets.fiware.io/2022/credentials/employee/v1
        id:
          type: string
          example: https://happypets.fiware.io/credential/25159389-8dd17b796ac0
        type:
          $ref: '#/components/schemas/CredentialsType'
        issuer:
          $ref: '#/components/schemas/IssuerId'
        credentialsSubject:
          oneOf:
            - $ref: '#/components/schemas/CustomerCredentialSubject'
            - $ref: '#/components/schemas/IShareCustomerCredentialSubject'
    ProblemDetails:
      description: Error description, as specified in RFC7807
      type: object
      properties:
        type:
          type: string
          format: uri
          example: my:resolvable:error:type
        title:
          type: string
          example: Unknown issuer.
        status:
          type: number
          example: 401
        detail:
          type: string
          example: No such issuer was registered.
        instance:
          type: string
          format: uri
    TimeRange:
      type: object
      properties:
        from:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
        to:
          type: string
          format: date-time
          example: '2023-07-21T17:32:28Z'
    Capabilities:
      type: object
      properties:
        validFor:
          $ref: '#/components/schemas/TimeRange'
        credentialsType:
          type: string
          example: "CustomerCredential"
        claims:
          type: array
          items:
            $ref: '#/components/schemas/Claim'
        policy:
          description: Placeholder object for potential use in future implementations
          type: object
    TrustedIssuer:
      type: object
      properties:
        id:
          type: string
          example: did:elsi:happypets
        capabilities:
          type: array
          items:
            $ref: '#/components/schemas/Capabilities'
    TrustedIssuerList:
      type: array
      items:
        $ref: '#/components/schemas/TrustedIssuer'
    Claim:
      type: object
      properties:
        name:
          type: string
          example: roles
        allowedValues:
          type: array
          items:
            type: string
          example:
            - "GOLD_CUSTOMER"
            - "STANDARD_CUSTOMER"
